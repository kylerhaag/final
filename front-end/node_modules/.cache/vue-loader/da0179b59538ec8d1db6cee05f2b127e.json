{"remainingRequest":"/Users/Kyler/Desktop/CS260/CP4/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Kyler/Desktop/CS260/CP4/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Kyler/Desktop/CS260/CP4/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Kyler/Desktop/CS260/CP4/front-end/src/components/MyTeddys.vue?vue&type=template&id=eefee1f2&scoped=true&","dependencies":[{"path":"/Users/Kyler/Desktop/CS260/CP4/front-end/src/components/MyTeddys.vue","mtime":1618863333379},{"path":"/Users/Kyler/Desktop/CS260/CP4/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kyler/Desktop/CS260/CP4/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Kyler/Desktop/CS260/CP4/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kyler/Desktop/CS260/CP4/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}